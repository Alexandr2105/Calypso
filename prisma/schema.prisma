generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String             @id @default(uuid())
  login             String
  email             String             @unique
  createdAt         DateTime
  passwordHash      String?
  isDeleted         Boolean
  googleAuthId      String?
  githubAuthId      String?
  accountType       AccountType        @default(Personal)
  emailConfirmation EmailConfirmation?
  userPost          Post[]
  refreshTokenData  RefreshTokenData[]
  userProfile       UserProfile?
}

model EmailConfirmation {
  userId           String   @id
  confirmationCode String   @unique
  expirationDate   DateTime
  isConfirmed      Boolean  @default(false)
  user             User     @relation(fields: [userId], references: [id])
}

model RefreshTokenData {
  iat        Int
  exp        Int
  deviceId   String @id
  ip         String
  deviceName String
  userId     String
  user       User   @relation(fields: [userId], references: [id])
}

model UserProfile {
  userId         String  @id
  login          String
  firstName      String?
  lastName       String?
  dateOfBirthday String?
  city           String?
  userInfo       String?
  photo          String?
  user           User    @relation(fields: [userId], references: [id])
}

model Post {
  id          String   @id
  userId      String
  description String?
  createdAt   DateTime
  user        User     @relation(fields: [userId], references: [id])
}

model Payments {
  userId                 String        @id
  paymentsId             String
  dateOfPayments         DateTime
  endDateOfSubscription  DateTime
  price                  Int
  subscriptionType       String
  paymentsType           String
  allDataPayment         Json?
  paymentStatus          PaymentStatus @default(Pending)
}

model Products{
  idProduct         String  @id
  nameSubscription  String
  price             Int

}

enum AccountType{
  Personal
  Business
}

enum PaymentStatus{
  Pending
  Success
  Declined
  Canceled
}
